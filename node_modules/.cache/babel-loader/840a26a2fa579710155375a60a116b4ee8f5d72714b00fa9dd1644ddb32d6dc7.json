{"ast":null,"code":"var _jsxFileName = \"/Users/kenfack/Desktop/kasa/src/components/CardAppartements.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppartementsComponent = () => {\n  _s();\n  // État local pour stocker les données JSON des appartements\n  const [appartements, setAppartements] = useState([]);\n  useEffect(() => {\n    // Fonction pour charger les données à partir du fichier JSON\n    const chargerAppartements = async () => {\n      try {\n        const response = await fetch(\"./data/Datas.JSON\");\n        if (!response.ok) {\n          throw new Error(\"Réponse réseau incorrecte.\");\n        }\n        const data = await response.json();\n        setAppartements(data);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des données JSON :\", error);\n      }\n    };\n\n    // Appelle la fonction pour charger les appartements au montage du composant\n    chargerAppartements();\n  }, []);\n\n  // Composant imbriqué CardAppartements\n  function CardAppartements() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grille-appart\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appartements-list\",\n        children: appartements.map(appartement => /*#__PURE__*/_jsxDEV(Card, {\n          appartement: appartement\n        }, appartement.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Rendre le composant imbriqué\n  return /*#__PURE__*/_jsxDEV(CardAppartements, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(AppartementsComponent, \"qz7KX1DvAJu03TtI7aMJkbmimJ0=\");\n_c = AppartementsComponent;\nexport default AppartementsComponent;\nvar _c;\n$RefreshReg$(_c, \"AppartementsComponent\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","AppartementsComponent","_s","appartements","setAppartements","chargerAppartements","response","fetch","ok","Error","data","json","error","console","CardAppartements","className","children","map","appartement","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kenfack/Desktop/kasa/src/components/CardAppartements.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\n\nconst AppartementsComponent = () => {\n  // État local pour stocker les données JSON des appartements\n  const [appartements, setAppartements] = useState([]);\n\n  useEffect(() => {\n    // Fonction pour charger les données à partir du fichier JSON\n    const chargerAppartements = async () => {\n      try {\n        const response = await fetch(\"./data/Datas.JSON\");\n        if (!response.ok) {\n          throw new Error(\"Réponse réseau incorrecte.\");\n        }\n        const data = await response.json();\n        setAppartements(data);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des données JSON :\", error);\n      }\n    };\n\n    // Appelle la fonction pour charger les appartements au montage du composant\n    chargerAppartements();\n  }, []);\n\n  // Composant imbriqué CardAppartements\n  function CardAppartements() {\n    return (\n      <div className=\"grille-appart\">\n        <div className=\"appartements-list\">\n          {appartements.map((appartement) => (\n            <Card key={appartement.id} appartement={appartement} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // Rendre le composant imbriqué\n  return <CardAppartements />;\n};\n\nexport default AppartementsComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;QACjD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,eAAe,CAACM,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF,CAAC;;IAED;IACAP,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASS,gBAAgBA,CAAA,EAAG;IAC1B,oBACEd,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BhB,OAAA;QAAKe,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/Bb,YAAY,CAACc,GAAG,CAAEC,WAAW,iBAC5BlB,OAAA,CAACF,IAAI;UAAsBoB,WAAW,EAAEA;QAAY,GAAzCA,WAAW,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,oBAAOvB,OAAA,CAACc,gBAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7B,CAAC;AAACrB,EAAA,CAtCID,qBAAqB;AAAAuB,EAAA,GAArBvB,qBAAqB;AAwC3B,eAAeA,qBAAqB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}